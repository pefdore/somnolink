// scripts/check-env.js
// Script de v√©rification des variables d'environnement pour le build

const requiredEnvVars = [
  'NEXT_PUBLIC_SUPABASE_URL',
  'NEXT_PUBLIC_SUPABASE_ANON_KEY'
];

const optionalEnvVars = [
  'SUPABASE_URL',
  'SUPABASE_ANON_KEY',
  'ICD_API_CLIENT_ID',
  'ICD_API_CLIENT_SECRET',
  'ICD_API_SEARCH_URL',
  'ICD_API_TOKEN_URL'
];

function checkEnvironment() {
  console.log('üîç V√©rification des variables d\'environnement...\n');
  
  let hasErrors = false;
  
  // V√©rifier les variables requises
  console.log('=== VARIABLES REQUISES ===');
  requiredEnvVars.forEach(varName => {
    const value = process.env[varName];
    if (!value) {
      console.error(`‚ùå ${varName}: NON D√âFINIE`);
      hasErrors = true;
    } else {
      console.log(`‚úÖ ${varName}: D√âFINIE`);
      if (varName.includes('KEY')) {
        console.log(`   Valeur: ${value.substring(0, 20)}... (${value.length} caract√®res)`);
      } else {
        console.log(`   Valeur: ${value}`);
      }
    }
  });
  
  // V√©rifier les variables optionnelles
  console.log('\n=== VARIABLES OPTIONNELLES ===');
  optionalEnvVars.forEach(varName => {
    const value = process.env[varName];
    if (!value) {
      console.log(`‚ö†Ô∏è  ${varName}: NON D√âFINIE`);
    } else {
      console.log(`‚úÖ ${varName}: D√âFINIE`);
      if (varName.includes('KEY') || varName.includes('SECRET')) {
        console.log(`   Valeur: ${value.substring(0, 20)}... (${value.length} caract√®res)`);
      } else {
        console.log(`   Valeur: ${value}`);
      }
    }
  });
  
  // Afficher le r√©sultat
  console.log('\n=== R√âSULTAT ===');
  if (hasErrors) {
    console.warn('‚ö†Ô∏è  AVERTISSEMENT: Variables requises manquantes!');
    console.warn('L\'application ne pourra pas fonctionner correctement sans ces variables.');
    console.warn('\nPour r√©soudre ce probl√®me:');
    console.warn('1. Configurez les variables dans Vercel Dashboard ‚Üí Settings ‚Üí Environment Variables');
    console.warn('2. Ou ajoutez-les dans un fichier .env.local pour le d√©veloppement local');
    console.warn('3. Red√©ployez apr√®s configuration');
    // On ne fait pas √©chouer le build pour permettre la configuration post-d√©ploiement
    console.warn('\nLe build continue mais l\'application ne fonctionnera pas jusqu\'√† configuration des variables.');
  } else {
    console.log('‚úÖ Toutes les variables requises sont configur√©es!');
    console.log('Le build peut continuer normalement.');
  }
}

// Ex√©cuter la v√©rification
checkEnvironment();